/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.uos.inf.did.abbozza.monitor;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author michael
 */
public class LevelPanel extends javax.swing.JPanel implements TableModelListener {

    private TableMonitorModel myTable;
    private Color colors[] = {
        Color.RED,
        new Color(0,200,0),
        new Color(0,0,255),
        Color.ORANGE,
        Color.MAGENTA
    };
    private Color background = Color.WHITE;
    private Color marks = Color.BLACK;

   /**
     * Creates new form LevelPanel
     */
    public LevelPanel() {
        initComponents();
        /*
        colors = new Color[5];
        colors[0] = Color.RED;
        colors[1] = Color.GREEN;
        colors[2] = Color.CYAN;
        colors[3] = Color.YELLOW;
        colors[4] = Color.BLACK;
        */
    }

    public LevelPanel(TableMonitorModel tab) {
        myTable = tab;
        myTable.addTableModelListener(this);
        initComponents();
        /*
        colors = new Color[5];
        colors[0] = Color.RED;
        colors[1] = Color.GREEN;
        colors[2] = Color.CYAN;
        colors[3] = Color.YELLOW;
        colors[4] = Color.BLACK;
        */
        // at most a tenth of a second
        // this.setPreferredSize(new Dimension(512,getHeight()));

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void paint(Graphics gr) {
        Graphics2D gr2d = (Graphics2D) gr;
        gr.setColor(background);
        gr.fillRect(0,0,getWidth(), getHeight());

        Rectangle rect = this.getVisibleRect();
        
        int channelWidth = getWidth()/5;
        int lastRow = myTable.getRowCount()-1;
        int y = 0;
        
        for (int col = 1; col <= 5;  col++ ) {
            int value = ((Integer) myTable.getValueAt(lastRow, col)).intValue();
            gr.setColor(colors[col-1]);
            switch ( myTable.getType(col-1) ) {
                case '0' :
                    y = (getHeight()-20)*(1-value);
                    break;
                case '1' :
                    y = (getHeight()-20)*(1023-value)/1023;
                    break;
                case '3' :
                    y = (getHeight()-20)*(32767-value)/65535;
                    break;
                default:
                    y = (getHeight()-20)*(65535-value)/65535;
            }
            // gr.setFont(new Font("SansSerif",Font.BOLD,16));
            gr.drawLine(channelWidth*(col-1), y+10, channelWidth,y+10);
            // gr.fillRect(channelWidth*(col-1)+30,y, channelWidth-60,20 );
            gr.setColor(background);
            // int w = gr.getFontMetrics().stringWidth("Kanal " + col);
            // int h = gr.getFontMetrics().getHeight();
            // gr.drawString("Kanal " + col,channelWidth*(col-1)+((channelWidth-w)/2),y+10+6);
        }
    }
        
 
    public void setTableModel(TableMonitorModel model) {
        myTable = model;
        myTable.addTableModelListener(this);
        this.revalidate();
    }
 
    @Override
    public void tableChanged(TableModelEvent e) {
        this.revalidate();
        this.repaint();
    }
}
